name: CI/CD for Lambda

on:
    push:
        branches:
            - test-api

env:
  AWS_REGION: us-east-1
  AWS_Role_ARN: secrets.IAM_ROLE_ARN
  REPO_ECR_NAME: feedays_cloud_repo

jobs:
    lambda_ci_cd:
        # コミットメッセージにlambdaが含まれている場合は実行
        runs-on: ubuntu-latest
        if: ${{ contains(github.event.head_commit.message, 'lambda') }}
        permissions:
            id-token: write
            contents: read
        strategy:
            matrix:
                function:
                - batch
                - test
                - site
                - user

        steps:
            - name: Checkout code
              uses: actions/checkout@v2
            # Lambda関数コードのsiteとuserの統合テストをする
            - name: Go Test For site /RequestHandler
              # working-directory: ./lambda/site
              run: go test ./lambda/site/RequestHandler
            - name: Go Test For user /RequestHandler
              # working-directory: ./lambda/user
              run: go test ./lambda/user/RequestHandler
            # Dockerビルド
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1
            - name: Set up Docker BuildKit
              run: |
                echo '{"features":{"buildkit":true}}' | sudo tee /etc/docker/daemon.json
                sudo systemctl restart docker
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                role-to-assume: ${{ secrets.IAM_ROLE_ARN }}
                aws-region: ${{ env.AWS_REGION }}
            # ECRにログイン
            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1
              # 各Lambdaの前ECRイメージを削除
            # - name: Delete old docker image
            #   run: |
            #     aws ecr batch-delete-image \
            #     --repository-name ${{ env.REPO_ECR_NAME }} \
            #     --image-ids imageTag=${{ matrix.function }} || true
            # 各Lambda関数をビルドしてECRにプッシュ
            - name: Build, tag, and push docker image to Amazon ECR
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  ECR_REPOSITORY: ${{ env.REPO_ECR_NAME }}
                  IMAGE_TAG: ${{ matrix.function }}
              run: |
                  docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./lambda/${{ matrix.function }}
                  docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            # 各Lambda関数を更新
            # - name: Update Lambda function
            #   run: |
            #     aws lambda update-function-code \
            #     --function-name ${{ matrix.function }} \
            #     --image-uri ${{ steps.login-ecr.outputs.registry }}/${{ env.REPO_ECR_NAME }}:${{ matrix.function }}


